# Reference: http://wiki.ros.org/costmap_2d
# Robot description parameters
footprint: [[0.075, 0.1], [-0.075, 0.1], [-0.075, -0.1], [0.075, -0.1]]  # The footprint of the robot specified in the robot_base_frame coordinate frame as a list in the format: [ [x1, y1], [x2, y2], ...., [xn, yn] ]. 
                                                                 ## The footprint specification assumes the center point of the robot is at (0.0, 0.0) in the robot_base_frame and that the points are specified in meters, 
                                                                 ## both clockwise and counter-clockwise orderings of points are supported.
footprint_padding: -0.01                                         # Amount to pad footprint (m).

#robot_radius: 0.18                                              # The radius of the robot in meters, this parameter should only be set for circular robots, 
                                                                 ## all others should use the "footprint" parameter described above.

#robot_base_frame: base_footprint      # The name of the frame for the base link of the robot.
                                       # And configure in the launch file  

# Rate parameters
update_frequency: 2.0                  # The frequency in Hz for the map to be updated. Default is 5.0
publish_frequency: 0.5                 # The frequency in Hz for the map to be publish display information. Default is 0.0.
transform_tolerance: 1.0               # Specifies the delay in transform (tf) data that is tolerable in seconds. 
                                       ## This parameter serves as a safeguard to losing a link in the tf tree while still allowing an amount of latency the user is comfortable with to exist in the system. 
                                       ## For example, a transform being 0.2 seconds out-of-date may be tolerable, but a transform being 8 seconds out of date is not. 
                                       ## If the tf transform between the coordinate frames specified by the "global_frame" and "robot_base_frame" parameters is transform_tolerance seconds older than ros::Time::now(), 
                                       ## then the navigation stack will stop the robot.
                                       ## Default is 0.2. 
resolution: 0.05                       # The resolution of the map in meters/cell.

# Map type parameters
# map_type: costmap

# Layer definitions
static_map_layer:   
    unknown_cost_value: 0              # The value for which a cost should be considered unknown when reading in a map from the map server. 
                                       ## If the costmap is not tracking unknown space, costs of this value will be considered occupied. 
                                       ## A value of zero also results in this parameter being unused. 
    lethal_cost_threshold: 100         # The threshold value at which to consider a cost lethal when reading in a map from the map server.      
    map_topic: map                     # The topic that the costmap subscribes to for the static map. 
                                       ## This parameter is useful when you have multiple costmap instances within a single node that you want to use different static maps.
                                       ## New in navigation 1.3.1
    first_map_only: false              # Only subscribe to the first message on the map topic, ignoring all subsequent messages
    subscribe_to_updates: true         # In addition to map_topic, also subscribe to map_topic + "_updates"
    track_unknown_space: false          # If true, unknown values in the map messages are translated directly to the layer. 
                                       ## Otherwise, unknown values in the map message are translated as FREE_SPACE in the layer.
    use_maximum: false                 # Only matters if the static layer is not the bottom layer. 
                                       ## If true, only the maximum value will be written to the master costmap.
    trinary_costmap: true              # If true, translates all map message values to NO_INFORMATION/FREE_SPACE/LETHAL_OBSTACLE (three values). 
                                       ## If false, a full spectrum of intermediate values is possible.
    rolling_window: false              # Whether or not to use a rolling window version of the costmap. 
                                       ## If the static_map parameter is set to true, this parameter must be set to false.
    always_send_full_costmap: false    # If true the full costmap is published to "~<name>/costmap" every update. 
                                       ## If false only the part of the costmap that has changed is published on the "~<name>/costmap_updates" topic. 
        

obstacle_layer:
    observation_sources: laser_scan_sensor   # A list of observation source names separated by spaces. 
                                             ## This defines each of the <source_name> namespaces defined below.
    laser_scan_sensor:                       # Parameters "sensor_frame" and "topic" are used in navigation.launch
        #sensor_frame: laser                 # The frame of the origin of the sensor. Leave empty to attempt to read the frame from sensor data.
                                             ## The frame can be read from both sensor_msgs/LaserScan, sensor_msgs/PointCloud, and sensor_msgs/PointCloud2 messages.
        #topic: scan                         # The topic on which sensor data comes in for this source. Defaults to the name of the source. 
        data_type: LaserScan                 # The data type associated with the topic, right now only "PointCloud", "PointCloud2", and "LaserScan" are supported.
        clearing: true                       # Whether or not this observation should be used to clear out freespace.
        observation_persistence: 0.0         # How long to keep each sensor reading in seconds. A value of 0.0 will only keep the most recent reading.
        marking: true                        # Whether or not this observation should be used to mark obstacles.  
        obstacle_range: 2.5                  # http://wiki.ros.org/costmap_2d/hydro/obstacles
        raytrace_range: 3.0
        inf_is_valid : true
        max_obstacle_height: 2.0           # The maximum height of any obstacle to be inserted into the costmap in meters. 
                                           ## This parameter should be set to be slightly higher than the height of your robot.
                                           ## Default is 2.0.
        obstacle_range: 2.5                # The default maximum distance from the robot at which an obstacle will be inserted into the cost map in meters. 
                                           ## This can be over-ridden on a per-sensor basis.
                                           ## Default is 2.5
        raytrace_range: 3.0                # The default range in meters at which to raytrace out obstacles from the map using sensor data. 
                                           ## This can be over-ridden on a per-sensor basis.
                                           ## Default is 3.0

inflation_layer:
    inflation_radius: 2.5              # The radius in meters to which the map inflates obstacle cost values.
                                       ## Default is 0.55
    cost_scaling_factor: 6.0           # A scaling factor to apply to cost values during inflation. 
                                       ## The cost function is computed as follows for all cells in the costmap further than the inscribed radius distance and closer than the inflation radius distance away from an actual obstacle:
                                       ## exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1), 
                                       ## where costmap_2d::INSCRIBED_INFLATED_OBSTACLE is currently 254. NOTE: since the cost_scaling_factor is multiplied by a negative in the formula, 
                                       ## increasing the factor will decrease the resulting cost values.
                                       ## Default is 10.0